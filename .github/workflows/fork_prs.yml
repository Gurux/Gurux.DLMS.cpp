name: Import Open PRs from Upstream in Batches

on:
  workflow_dispatch:
    inputs:
      batch_size:
        description: 'Number of PRs to import per run'
        required: false
        default: '10'

jobs:
  import-prs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout self
      uses: actions/checkout@v3

    - name: Setup git and GitHub CLI
      run: |
        sudo apt update
        sudo apt install -y gh git jq
        gh auth login --with-token <<< "${{ secrets.PR_TOKEN }}"

    - name: Clone and import PRs
      env:
        GH_TOKEN: ${{ secrets.PR_TOKEN }}
        SOURCE_REPO: gurux/Gurux.DLMS.cpp
        TARGET_REPO: ${{ github.repository }}
        BATCH_SIZE: ${{ github.event.inputs.batch_size }}
      run: |
        mkdir repo && cd repo
        git init
        git remote add origin https://github.com/${TARGET_REPO}.git
        git remote add upstream https://github.com/${SOURCE_REPO}.git
        git fetch upstream

        gh pr list -R $SOURCE_REPO --state open --json number,title,headRefName,headRepositoryOwner,url > prs.json
        COUNT=$(jq length prs.json)
        echo "üì¶ Found $COUNT PRs"

        START_INDEX=0
        END_INDEX=$((START_INDEX + BATCH_SIZE - 1))

        for i in $(seq $START_INDEX $END_INDEX); do
          [ "$i" -ge "$COUNT" ] && break

          number=$(jq -r ".[$i].number" prs.json)
          title=$(jq -r ".[$i].title" prs.json)
          head_branch=$(jq -r ".[$i].headRefName" prs.json)
          head_user=$(jq -r ".[$i].headRepositoryOwner.login" prs.json)
          original_url=$(jq -r ".[$i].url" prs.json)

          remote_name="pruser$number"
          new_branch="pr-from-upstream-$number"

          git remote add $remote_name https://github.com/$head_user/Gurux.DLMS.cpp.git || true
          git fetch $remote_name $head_branch

          git checkout -b $new_branch FETCH_HEAD
          git push origin $new_branch

          body_text=$(gh pr view $number -R $SOURCE_REPO --json body -q .body)
          author=$(jq -r ".[$i].headRepositoryOwner.login" prs.json)
          labels=$(gh pr view $number -R $SOURCE_REPO --json labels -q '[.labels[].name] | join(", ")')
          milestone=$(gh pr view $number -R $SOURCE_REPO --json milestone -q .milestone.title)

          final_body="**Original PR**: [$original_url]($original_url)\n**Original author**: @$author\n\n---\n\n$body_text"

          gh pr create --title "$title (from upstream PR #$number)"                        --body "$final_body"                        --head "$new_branch" --base master                        || echo "‚ö†Ô∏è PR already exists or error"

          if [ -n "$labels" ]; then
            IFS=',' read -ra label_array <<< "$labels"
            for lbl in "${label_array[@]}"; do
              gh pr edit "$new_branch" --add-label "$lbl" || true
            done
          fi

          if [ "$milestone" != "null" ] && [ -n "$milestone" ]; then
            gh pr edit "$new_branch" --milestone "$milestone" || true
          fi
        done
